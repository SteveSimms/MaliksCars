@page "/admin/dashboard"
@using  MaliksCars.Application.Services.Auth
@inject UsersService usersService
@attribute [Authorize(Roles = CustomRoles.Admin)] //this line is key to the whole thing working

<AuthorizeView Roles="@CustomRoles.Admin">
    <Authorized>
        <section class="max-w-5xl mx-auto py-28 min-h-screen px-4">
            <article>
                <h1 class="text-2xl font-bold text-gray-800">
                    Admin Dashboard
                </h1>
 <table>
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in users)
                {
                    <tr>
                        <td>@user.Id</td>
                        <td>@user.Name</td>
                        <td>@user.Email</td>
                        <td>
                            <button @onclick="() => AssignAdminRole(user.Id)"class="bg-purple-500 hover:bg-purple-700 text-white font-bold py-2 px-4 
                                            rounded-md 
                                            focus:outline-none 
                                            focus:ring-2 
                                            focus:ring-purple-600 
                                            focus:ring-opacity-50">Assign Admin Role</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
            </article>
        </section>
    </Authorized>
    <NotAuthorized>
        <div class="min-h-screen flex w-full justify-center items-center">
            <p class="text-lg">Sorry, you do not have the proper permissions to access this page.</p>
        </div>
    </NotAuthorized>
</AuthorizeView>




@code {
    private AssignRoleModel assignRoleModel = new AssignRoleModel();

 private List<User> users = new List<User>();

    protected override async Task OnInitializedAsync()
    {
        users = await usersService.GetAllUsersAsync();
    }
    private async Task AssignAdminRole(int userId)
    {
        await usersService.AssignAdminRoleAsync(userId);
    }
    private class AssignRoleModel
    {
        public int UserId { get; set; }
    }
}